group 'org.example'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'jacoco'

repositories {
    mavenCentral()
}

jacoco{
    toolVersion = '0.8.6'
}


dependencies {
    testImplementation 'junit:junit:4.12'
    implementation 'junit:junit:4.12'
    testImplementation group: 'io.rest-assured', name: 'rest-assured', version: '4.3.3'
    implementation group: 'io.rest-assured', name: 'rest-assured', version: '4.3.3'
    compile group: 'io.rest-assured', name: 'json-path', version: '4.3.3'
    compile group: 'io.rest-assured', name: 'json-schema-validator', version: '4.3.3'
    compile group: 'io.rest-assured', name: 'xml-path', version: '4.3.3'
    compile group: 'io.rest-assured', name: 'rest-assured-common', version: '4.3.3'
    compile group: 'org.mockito', name: 'mockito-core', version: '3.2.4'
}

sourceSets {
    main {
        java {
            srcDir 'src'
        }
    }


    test {
        java {
            srcDir 'test'
        }
    }


    jacocoTestCoverageVerification {
        violationRules {
            rule {
                limit {
                    counter = 'LINE'
                    value = 'COVEREDRATIO'
                    minimum = 0.9
                }
            }
        }
    }

    task codeCoverageReport(type: JacocoReport) {

        // Gather execution data from all subprojects
        executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

        // Add all relevant sourcesets from the subprojects
        subprojects.each {
            sourceSets it.sourceSets.main
        }

        reports {
            xml.enabled true
            html.enabled true
            csv.enabled false
        }
    }

// always run the tests before generating the report
    codeCoverageReport.dependsOn {
        subprojects*.test
    }
}
